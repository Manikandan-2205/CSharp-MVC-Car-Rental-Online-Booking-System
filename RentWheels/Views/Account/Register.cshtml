@model RentWheels.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<style>
   .con {
        display: flex;
        justify-content: center;
    }

    .form-container {
        background-color: #f9f9f9;
        padding: 20px;
        /*margin: 20px;*/
        border-radius: 10px;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
        max-width: 900px;
        width: 100%;
    }

    .form-group {
        margin: 20px;
    }

    .form-control {
        border-radius: 8px;
        width: 100%;
    }

    .input-group {
        width: 48%;
    }

    .input-group-addon {
        padding: 6px 12px;
        font-size: 14px;
        font-weight: normal;
        line-height: 1;
        color: #555;
        text-align: center;
        background-color: #eee;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }

    .text-danger {
        color: #dc3545;
    }

    .show-password {
        position: absolute;
        right: 0px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        background-color: transparent;
        border: none;
        padding: 8px 12px;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .input-group-addon.show-password i {
        margin-left: -30px;
    }

    #password {
        border-radius: 8px;
    }

    .full {
        max-width: 600px;
        
    }
    .form-details{
        /*display:flex;*/
        justify-content:center;
        max-width:600px;
        padding:20px;
    }
    .space{
        margin-bottom:20px;
    }
    #show-hide-pass{
        border:none;
        background-color:transparent;
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        background-color: transparent;
        border: none;
        padding: 8px 12px;
    }
    #show-hide{
        border:none;
        background-color:transparent;
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        background-color: transparent;
        border: none;
        padding: 8px 12px;       
    }
    
</style>
<div class="container con">
    <div class="row">
        <div class="col-md-6 form-container">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h2>Create New Account</h2>
                <p class="text-danger">@ViewBag.Message</p>
                <div class="container form-details">
                    <div class="form-group ">
                        <div class="row">
                            <div class="col-md-6 space">
                                @Html.TextBoxFor(m => m.RegisterDetail.Username, new { @class = "form-control", placeholder = "Username", required = "required" })
                            </div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.RegisterDetail.PhoneNo, new { @class = "form-control", placeholder = "Phone Number", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @*<div class="col-md-12">*@
                        @Html.TextBoxFor(m => m.RegisterDetail.Email, new { @class = "form-control  full", type = "email", placeholder = "Email", required = "required" })
                        @*</div>*@
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6 space">
                                @Html.TextBoxFor(m => m.RegisterDetail.Age, new { @class = "form-control", type = "number", placeholder = "Age", required = "required" })
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.RegisterDetail.Gender, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Male", Value = "Male" },
                                new SelectListItem { Text = "Female", Value = "Female" },
                                new SelectListItem { Text = "Other", Value = "Other" }
                            }, "Select Gender", new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @*<div class="col-md-12">*@
                        @Html.TextBoxFor(m => m.RegisterDetail.AadharNo, new { @class = "form-control full", placeholder = "Aadhar No", required = "required" })
                        @*</div>*@
                    </div>
                    <div class="form-group">
                        @*<div class="col-md-12">*@
                        @Html.TextBoxFor(m => m.RegisterDetail.DrivingLicenseNo, new { @class = "form-control full", placeholder = "Driving License Number", required = "required" })
                        @*</div>*@
                    </div>
                    <div class="form-group">
                        @*<div class="col-md-12">*@
                        @Html.TextAreaFor(m => m.RegisterDetail.Address, new { @class = "form-control full", rows = "3", placeholder = "Address", required = "required" })
                        @*</div>*@
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6 space">
                                @Html.TextBoxFor(m => m.RegisterDetail.Password, new { @class = "form-control", type = "password", id = "password", placeholder = "Password", required = "required" })
                                <button type="button" onclick="togglePasswordVisibility()" class="glyphicon glyphicon-eye-open" id="show-hide-pass"></button>
                            </div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.RegisterDetail.ConfirmPassword, new { @class = "form-control", type = "password", id = "Cpassword", placeholder = "Confirm Password", required = "required" })
                                <button type="button" onclick="togPasswordVisibility()" class="glyphicon glyphicon-eye-open" id="show-hide"></button>
                                @*<span class="input-group-addon show-password" id="showPassword">
                                    <i class="glyphicon glyphicon-eye-open"></i>
                                </span>*@
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-block">Sign Up</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script>
    //$(document).ready(function () {
    //    $("#showPassword, #showConfirmPassword").click(function () {
    //        var passwordField = $(this).closest('.input-group').find('input');
    //        var passwordFieldType = passwordField.attr("type");
    //        var icon = $(this).find('i');

    //        if (passwordFieldType === "password") {
    //            passwordField.attr("type", "text");
    //            icon.removeClass("glyphicon glyphicon-eye-open").addClass("glyphicon glyphicon-eye-close");
    //        } else {
    //            passwordField.attr("type", "password");
    //            icon.removeClass("glyphicon glyphicon-eye-close").addClass("glyphicon glyphicon-eye-open");
    //        }
    //    });
    //});

    function togglePasswordVisibility() {
        var passField = document.getElementById("password");
        var passToggle = document.getElementById("show-hide-pass");
        if (passField.type === "password") {
            passField.type = "text";
            passToggle.classList.remove("glyphicon-eye-close");
            passToggle.classList.add("glyphicon-eye-open");
        } else {
            passField.type = "password";
            passToggle.classList.remove("glyphicon-eye-open");
            passToggle.classList.add("glyphicon-eye-close");
        }
    }
    function togPasswordVisibility() {
        var passField = document.getElementById("Cpassword");
        var passToggle = document.getElementById("show-hide");
        if (passField.type === "password") {
            passField.type = "text";
            passToggle.classList.remove("glyphicon-eye-close");
            passToggle.classList.add("glyphicon-eye-open");
        } else {
            passField.type = "password";
            passToggle.classList.remove("glyphicon-eye-open");
            passToggle.classList.add("glyphicon-eye-close");
        }
    }
</script>
