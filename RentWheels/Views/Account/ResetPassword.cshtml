@model RentWheels.Models.RegisterDetail
@{
    ViewBag.Title = "Reset Password";
}
<style>
    /* Center the form on the page */
    #container1 {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f0f2f5;
    }

    .login-container {
        background-color: #fff;
        padding: 40px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .logo {
        width: 100px;
        margin-bottom: 20px;
    }

    h2 {
        font-size: 24px;
        margin-bottom: 20px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .input-group-addon {
        cursor: pointer;
    }
</style>
<div class="container" id="container1">
    <div class="login-container">
        <img class="logo" src="~/Content/images/logo2.jpg" alt="Logo">
        <h2>Please Login</h2>

        @if (ViewBag.Message == "Password reset successful.")
        {
            <div class="alert alert-success">@ViewBag.Message</div>
        }
        else
        {
            <div class="alert alert-danger">@ViewBag.Message</div>
        }

        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", placeholder = "New Password" })
                    <span class="input-group-addon" id="showPassword">
                        <i class="glyphicon glyphicon-eye-open"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                    <span class="input-group-addon" id="showConfirmPassword">
                        <i class="glyphicon glyphicon-eye-open"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary btn-block" />
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>
        }
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $("#showPassword").click(function () {
                var passwordInput = $("#NewPassword");
                var passwordInputType = passwordInput.attr("type");
                if (passwordInputType === "password") {
                    passwordInput.attr("type", "text");
                } else {
                    passwordInput.attr("type", "password");
                }
            });
            $("#showConfirmPassword").click(function () {
                var confirmPasswordInput = $("#ConfirmPassword");
                var confirmPasswordInputType = confirmPasswordInput.attr("type");
                if (confirmPasswordInputType === "password") {
                    confirmPasswordInput.attr("type", "text");
                } else {
                    confirmPasswordInput.attr("type", "password");
                }
            });
        });
    </script>
}
